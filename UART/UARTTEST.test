<!DOCTYPE Robei>
<Module Color="#f5f5dc" Y="0" Width="1024" File="Current/UARTTEST.test" Comment="" Time_Scale="" Type="testbench" Class="module" Name="UARTTEST" Code="initial begin&#xa;clk16x=0;&#xa;rst_n=0;&#xa;rx=0;&#xa;#2&#xa;rst_n=1;&#xa;#2&#xa;rst_n=0;&#xa;#2&#xa;rst_n=1;&#xa;#2&#xa;rx=1;&#xa;#32&#xa;rx=0;&#xa;#64&#xa;rx=1;&#xa;#128&#xa;rx=0;&#xa;#64&#xa;rx=1;&#xa;#32&#xa;rx=0;&#xa;#32&#xa;rx=1;&#xa;#100&#xa;$finish;&#xa;end&#xa;&#xa;always begin&#xa;#1&#xa;clk16x=~clk16x;&#xa;end&#xa;&#xa;&#xa;&#xa;&#xa;&#xa;" Height="720" X="0" Parent="0">
 <Module Color="#f5f5dc" Y="222.944" Width="402" File="Current/UART.model" Comment="" Type="model" Class="UART" Name="UART1" Code=" reg [7:0] cnt;&#xa;/*  捕获rx的下降沿，即起始信号  */    &#xa;  reg trigger_r0;&#xa;  wire neg_tri;&#xa;always@(posedge GClk or negedge rst_n)  /*下降沿使用全局时钟来捕获的，其实用clk16x来捕获也可以*/&#xa;  begin&#xa;      if(!rst_n)&#xa;          begin&#xa;             trigger_r0&lt;=1'b0;&#xa;          end&#xa;      else&#xa;         begin    &#xa;              trigger_r0&lt;=rx;&#xa;          end&#xa;  end&#xa;  &#xa;  assign neg_tri = trigger_r0 &amp; ~rx;&#xa;  &#xa;  //----------------------------------------------    &#xa; /*     counter control      */&#xa;  reg cnt_en;&#xa;  always@(posedge GClk or negedge rst_n)&#xa;  begin&#xa;      if(!rst_n)&#xa;          cnt_en&lt;=1'b0;&#xa;      else if(neg_tri==1'b1)      /*如果捕获到下降沿，则开始计数*/&#xa;          cnt_en&lt;=1'b1;&#xa;      else if(cnt==8'd152)&#xa;          cnt_en&lt;=1'b0;&#xa;     &#xa;  end&#xa;  //---------------------------------------------&#xa;  /*      counter module ，对采样时钟进行计数       */&#xa;  &#xa; always@(posedge clk16x or negedge rst_n)&#xa;  begin&#xa;      if(!rst_n)&#xa;          cnt&lt;=8'd0;&#xa;      else if(cnt_en)&#xa;        //  cnt&lt;=cnt+1'b1;&#xa;       cnt&lt;=cnt+1;&#xa;      else&#xa;          cnt&lt;=8'd0;&#xa;  &#xa;  end&#xa;  //---------------------------------------------&#xa;  /*      receive module        */&#xa;  reg StopBit_r;&#xa;  always@(posedge clk16x or negedge rst_n)&#xa;  begin&#xa;      if(!rst_n)&#xa;          begin&#xa;             DataReceived&lt;=8'b0;&#xa;         end&#xa;      else if(cnt_en)&#xa;          case(cnt)&#xa;              8'd24:   DataReceived[0] &lt;= rx;    /*在各个采样时刻，读取接收到的数据*/&#xa;              8'd40:   DataReceived[1] &lt;= rx;&#xa;              8'd56:   DataReceived[2] &lt;= rx;&#xa;              8'd72:   DataReceived[3] &lt;= rx;&#xa;              8'd88:   DataReceived[4] &lt;= rx;&#xa;              8'd104:  DataReceived[5] &lt;= rx;&#xa;              8'd120:  DataReceived[6] &lt;= rx;&#xa;              8'd136:  DataReceived[7] &lt;= rx;&#xa;              &#xa;          endcase&#xa;  &#xa;  end&#xa;  &#xa;  always@(posedge clk16x or negedge rst_n)&#xa;  begin&#xa;      if(!rst_n)&#xa;          DataReady&lt;=1'b0;&#xa;      else if (cnt==8'd152)&#xa;          DataReady&lt;=1'b1;       //接收到停止位后，给出数据准备好标志位&#xa;      else &#xa;          DataReady&lt;=1'b0;&#xa;  end&#xa;  &#xa;" Height="315" Parameters="" X="305.667" Parent="UARTTEST">
  <Port Color="#00ffff" Y="0.171429" Width="20" Name="clk16x" Inout="input" Side="left" Height="20" Function="" Datasize="1" Datatype="wire" X="-0.0497512" Parent="UART1"/>
  <Port Color="#7fffd4" Y="0.371429" Width="20" Name="rst_n" Inout="input" Side="left" Height="20" Function="" Datasize="1" Datatype="wire" X="-0.0497512" Parent="UART1"/>
  <Port Color="#f0ffff" Y="0.571429" Width="20" Name=" rx" Inout="input" Side="left" Height="20" Function="" Datasize="1" Datatype="wire" X="-0.0497512" Parent="UART1"/>
  <Port Color="#cd853f" Y="0.219048" Width="20" Name="DataReady" Inout="output" Side="right" Height="20" Function="" Datasize="1" Datatype="reg" X="0.950249" Parent="UART1"/>
  <Port Color="#ffe4c4" Y="0.466667" Width="20" Name="DataReceived" Inout="output" Side="right" Height="20" Function="" Datasize="8" Datatype="reg" X="0.950249" Parent="UART1"/>
 </Module>
 <Port Color="#00ffff" Y="0.320833" Width="20" Name="clk16x" Inout="input" Side="left" Height="20" Function="simple clock,16*115200" Datasize="1" Datatype="reg" X="-0.0195313" Parent="UARTTEST"/>
 <Port Color="#7fffd4" Y="0.495833" Width="20" Name="rst_n" Inout="input" Side="left" Height="20" Function="global reset signal" Datasize="1" Datatype="reg" X="-0.0195313" Parent="UARTTEST"/>
 <Port Color="#f0ffff" Y="0.655556" Width="20" Name="rx" Inout="input" Side="left" Height="20" Function="serial data in" Datasize="1" Datatype="reg" X="-0.0195313" Parent="UARTTEST"/>
 <Port Color="#cd853f" Y="0.238889" Width="20" Name="DataReady" Inout="output" Side="right" Height="20" Function="a complete byte has been received" Datasize="1" Datatype="wire" X="0.980469" Parent="UARTTEST"/>
 <Port Color="#ffe4c4" Y="0.488889" Width="20" Name="DataReceived" Inout="output" Side="right" Height="20" Function="bytes recevied" Datasize="8" Datatype="wire" X="0.980469" Parent="UARTTEST"/>
 <Wire To="UARTTEST#UART1>clk16x" From="UARTTEST>clk16x" Name="clk16x_clk16x" Datasize="1" Datatype="wire" Parent="UARTTEST"/>
 <Wire To="UARTTEST#UART1>rst_n" From="UARTTEST>rst_n" Name="rst_n_rst_n" Datasize="1" Datatype="wire" Parent="UARTTEST"/>
 <Wire To="UARTTEST#UART1> rx" From="UARTTEST>rx" Name="rx_ rx" Datasize="1" Datatype="wire" Parent="UARTTEST"/>
 <Wire To="UARTTEST>DataReady" From="UARTTEST#UART1>DataReady" Name="DataReady_DataReady" Datasize="1" Datatype="wire" Parent="UARTTEST"/>
 <Wire To="UARTTEST>DataReceived" From="UARTTEST#UART1>DataReceived" Name="DataReceived_DataReceived" Datasize="8" Datatype="wire" Parent="UARTTEST"/>
</Module>
